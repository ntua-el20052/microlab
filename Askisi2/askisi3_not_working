.include "m328PBdef.inc"
 
.equ FOSC_MHZ=16	;MHz
.equ DEL_mS1=30	;mS
.equ DEL_mS2=500	;mS
.equ DEL_NU1= FOSC_MHZ*DEL_mS1 
.equ DEL_NU2= FOSC_MHZ*DEL_mS2
.def led = r16
.DEF ledall= r17
.DEF counter=r18
.def flag= r19
.cseg
    .org 0x00		;Reset vector
    rjmp reset		;Jump to reset handler
    
    .org 0x4		;Start of interrupt vectors
    rjmp ISR1		;Jump to INT1 interrupt handler 

reset:
    ldi r24,low(RAMEND)
    out SPL,r24
    ldi r24,high(RAMEND)
    out SPH,r24  

;init PORTB as output
ser r26
out DDRB, r26	    ;PORTB=out
clr r26
out DDRD,r26	    ;PortD == in

ldi r26,(1<<ISC11)|(0<<ISC10)  ;Initialize external interrupt 1 (INT1)
sts EICRA,r26		    ;Falling edge generates interrupt
ldi r26,(1<<INT1)		    ;Configure INT1
out EIMSK,r26		    ;Enable INT1 interrupt
    
sei		;Enable global interrupts


ldi ledall,0xff ; αρχικοποιω 
ldi flag, 0x00
    
    
main_loop:		; κυριο προγραμμα, περιμενει να πιασει την εξαιρεση
    ldi counter, 0x00
    ldi led,0x00
    out PORTB,led
    rjmp main_loop
    
    
    
    
    
    
    
    
    
    
ISR1:	   			;διακοπη
	cpi flag, 1		;εαν το flag ειναι 1, παταω διακοπη ενω ειναι ηδη ανοικτο το φως, αρα παω στο skip
	breq skip
	ldi flag, 0x01		; θετω το flag 1 epeidh ξεκιναει η εκτελεση της πρωτης
        ldi counter, 0x64
	sei			;έπιτρεψε τις διακοπες μεσα στην διακοπη, αλλιως εαν κανεςι διακοπη ενω εκτελεις κωδικα
				;διακοπης περιμενει να τερματισει η πρωτη και μετα ξεκιναει η δευτερη (nested interrupts)
conti:	
	ldi led, 0x01
	out PORTB,led
	ldi r24, low(DEL_NU1-1)
	ldi r25, high(DEL_NU1-1)
	rcall delay_mS
	dec counter
	brne conti
	reti
skip:	;sei
	ldi ledall,0xff
	out PORTB,ledall
	ldi r24, low(DEL_NU2-1)
	ldi r25, high(DEL_NU2-1)
	rcall delay_mS
	;ldi counter,0x01
	ldi flag, 0x00		;τελειωνει το update οποτε κανε το φλαγκ 0
	;out SREG, r20
	reti
    
	
	
	
	
delay_mS:
    ldi r23, 249
loop_inn:
    dec r23		    ; 1 cycle
    nop			    ; 1 cycle
    brne loop_inn	    ; 1 or 2 cycles
     
    sbiw r24 ,1		    ; 2 cycles
    brne delay_mS	    ; 1 or 2 cycles
 
    ret			    ;4 cycl
    

